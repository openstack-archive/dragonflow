DRAGONFLOW_REPO=${DRAGONFLOW_REPO:-git://github.com/openstack/dragonflow.git}
DRAGONFLOW_DIR=$DEST/dragonflow
DRAGONFLOW_BRANCH=${DRAGONFLOW_BRANCH:-master}

DF_L3_SERVICE_PLUGIN="dragonflow.neutron.services.l3.l3_controller_plugin.ControllerL3ServicePlugin"

DF_LOCAL_CONTROLLER=$DRAGONFLOW_DIR/dragonflow/controller/df_local_controller.py
DF_L3_BINARY=${DF_L3_BINARY:-"$NEUTRON_BIN_DIR/df-l3-agent"}

DF_L2_RESPONDER=${DF_L2_RESPONDER:-'True'}

export PYTHONPATH=$PYTHONPATH:$DRAGONFLOW_DIR

DF_MONITOR_TABLE_POLL_TIME=${DF_MONITOR_TABLE_POLL_TIME:-30}
DF_PUB_SUB=${DF_PUB_SUB:-"False"}
DF_PUB_SUB_USE_MULTIPROC=${DF_PUB_SUB_USE_MULTIPROC:-"True"}
DF_Q_SVC_MASTER=${DF_Q_SVC_MASTER:-"True"}

PUBLISHER_RATE_LIMIT_TIMEOUT=${PUBLISHER_RATE_LIMIT_TIMEOUT:-180}
PUBLISHER_RATE_LIMIT_COUNT=${PUBLISHER_RATE_LIMIT_COUNT:-1}
if [ is_fedora -a $os_RELEASE -ge 23 ] ; then
    OVS_INSTALL_FROM_GIT=${OVS_INSTALL_FROM_GIT:-"False"}
elif [ is_ubuntu -a $UBUNTU_RELEASE_BASE_NUM -ge 16 ] ; then
    OVS_INSTALL_FROM_GIT=${OVS_INSTALL_FROM_GIT:-"False"}
else
    OVS_INSTALL_FROM_GIT=${OVS_INSTALL_FROM_GIT:-"True"}
fi
