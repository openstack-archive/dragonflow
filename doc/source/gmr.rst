..
      Copyright (c) 2016 OpenStack Foundation

      Licensed under the Apache License, Version 2.0 (the "License"); you may
      not use this file except in compliance with the License. You may obtain
      a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
      WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
      License for the specific language governing permissions and limitations
      under the License.

Guru Meditation Reports
=======================

Dragonflow contains a mechanism whereby developers and system administrators
can generate a report about the state of a running Dragonflow executable.
This report is called a *Guru Meditation Report* (*GMR* for short).

Generating a GMR
----------------

A *GMR* can be generated by sending the *USR2* signal to any Dragonflow process
with support (see below).
The *GMR* will then be outputted standard error for that particular process.

For example, suppose that ``df-local-controller`` has process id ``2525``, and
was run with ``2>/var/log/dragonflow/df-controller.log``.  Then,
``kill -USR2 2525`` will trigger the Guru Meditation report to be printed to
``/var/log/dragonflow/df-controller.log``.

Structure of a GMR
------------------

The *GMR* is designed to be extensible; any particular executable may add its
own sections. However, the base *GMR* consists of several sections:

Package
  Shows information about the package to which this process belongs, including
  version information

Threads
  Shows stack traces and thread ids for each of the threads within this process

Green Threads
  Shows stack traces for each of the green threads within this process (green
  threads don't have thread ids)

Configuration
  Lists all the configuration options currently accessible via the CONF object
  for the current process

Adding Support for GMRs to New Executables
------------------------------------------

Adding support for a *GMR* to a given executable is fairly easy.

First import the module, as well as the Dragonflow version module:

.. code-block:: python

      from oslo_reports import guru_meditation_report as gmr
      from dragonflow import version

Then, register any additional sections (optional):

.. code-block:: python

      TextGuruMeditation.register_section('Some Special Section',
                                          some_section_generator)

Finally (under main), before running the "main loop" of the executable,
register the *GMR* hook:

.. code-block:: python

      TextGuruMeditation.setup_autorun(version)

Extending the GMR
-----------------

As mentioned above, additional sections can be added to the GMR for a
particular executable.
For more information, see the inline documentation under :mod:`oslo.reports`
