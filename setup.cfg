[metadata]
name = dragonflow
summary = Distributed SDN solution for OpenStack Neutron
license = Apache License 2.0
description-file =
    README.rst
author = OpenStack
author-email = openstack-dev@lists.openstack.org
home-page = http://docs.openstack.org/developer/dragonflow/
classifier =
    Environment :: OpenStack
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.5

[files]
packages =
    dragonflow

[build_sphinx]
source-dir = doc/source
build-dir = doc/build
all_files = 1

[upload_sphinx]
upload-dir = doc/build/html

[compile_catalog]
directory = dragonflow/locale
domain = dragonflow

[update_catalog]
domain = dragonflow
output_dir = dragonflow/locale
input_file = dragonflow/locale/dragonflow.pot

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = dragonflow/locale/dragonflow.pot


[entry_points]
neutron.ml2.mechanism_drivers =
    df = dragonflow.neutron.ml2.mech_driver:DFMechDriver
neutron.db.alembic_migrations =
    dragonflow = dragonflow.db.neutron.migration:alembic_migrations
console_scripts =
    df-db = dragonflow.cli.df_db:main
    df-local-controller = dragonflow.cmd.eventlet.df_local_controller:main
    df-publisher-service = dragonflow.cmd.eventlet.df_publisher_service:main
    df-l3-agent = dragonflow.cmd.eventlet.df_l3_agent:main
    df-metadata-service = dragonflow.cmd.eventlet.df_metadata_service:main
    df-bgp-service = dragonflow.cmd.eventlet.df_bgp_service:main
dragonflow.pubsub_driver =
    zmq_pubsub_driver = dragonflow.db.pubsub_drivers.zmq_pubsub_driver:ZMQPubSub
    zmq_pubsub_multiproc_driver = dragonflow.db.pubsub_drivers.zmq_pubsub_driver:ZMQPubSubMultiproc
    redis_db_pubsub_driver = dragonflow.db.pubsub_drivers.redis_db_pubsub_driver:RedisPubSub
dragonflow.nb_db_driver =
    etcd_nb_db_driver = dragonflow.db.drivers.etcd_db_driver:EtcdDbDriver
    ramcloud_nb_db_driver = dragonflow.db.drivers.ramcloud_db_driver:RamCloudDbDriver
    zookeeper_nb_db_driver = dragonflow.db.drivers.zookeeper_db_driver:ZookeeperDbDriver
    redis_nb_db_driver = dragonflow.db.drivers.redis_db_driver:RedisDbDriver
    cassandra_nb_db_driver = dragonflow.db.drivers.cassandra_db_driver:CassandraDbDriver
dragonflow.neutron_notifier_driver =
    nb_api_neutron_notifier_driver = dragonflow.db.pubsub_drivers.nb_api_neutron_notifier:NbApiNeutronNotifier
neutron.service_plugins =
    df-l3 = dragonflow.neutron.services.l3_router_plugin:DFL3RouterPlugin
    df-bgp = dragonflow.neutron.services.bgp.bgp_plugin:DFBgpPlugin
oslo.config.opts =
    dragonflow.conf = dragonflow.conf.opts:list_opts
dragonflow.controller.apps =
    active_port_detection = dragonflow.controller.active_port_detection_app:ActivePortDetectionApp
    aging = dragonflow.controller.aging_app:Aging
    chassis_snat = dragonflow.controller.chassis_snat_app:ChassisSNATApp
    classifier = dragonflow.controller.classifier_app:ClassifierApp
    dhcp = dragonflow.controller.dhcp_app:DHCPApp
    dnat = dragonflow.controller.dnat_app:DNATApp
    l2 = dragonflow.controller.l2_app:L2App
    legacy_snat = dragonflow.controller.legacy_snat_app:LegacySNatApp
    l3_proactive = dragonflow.controller.l3_proactive_app:L3ProactiveApp
    l3_reactive = dragonflow.controller.l3_app:L3App
    metadata_service = dragonflow.controller.metadata_service_app:MetadataServiceApp
    migration = dragonflow.controller.migration_app:MigrationApp
    portqos = dragonflow.controller.portqos_app:PortQosApp
    portsec = dragonflow.controller.portsec_app:PortSecApp
    provider = dragonflow.controller.provider_networks_app:ProviderNetworksApp
    sg = dragonflow.controller.sg_app:SGApp
    trunk = dragonflow.controller.trunk_app:TrunkApp
    tunneling = dragonflow.controller.tunneling_app:TunnelingApp
