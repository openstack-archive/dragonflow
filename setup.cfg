[metadata]
name = dragonflow
summary = Distributed SDN solution for OpenStack Neutron
license = Apache License 2.0
description-file =
    README.rst
author = OpenStack
author-email = openstack-discuss@lists.openstack.org
home-page = http://www.dragonflow.net/
classifier =
    Environment :: OpenStack
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7

[files]
packages =
    dragonflow
data_files =
    etc/neutron/ =
        etc/dragonflow_datapath_layout.yaml

[compile_catalog]
directory = dragonflow/locale
domain = dragonflow

[update_catalog]
domain = dragonflow
output_dir = dragonflow/locale
input_file = dragonflow/locale/dragonflow.pot

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = dragonflow/locale/dragonflow.pot


[entry_points]
neutron.ml2.mechanism_drivers =
    df = dragonflow.neutron.ml2.mech_driver:DFMechDriver
neutron.db.alembic_migrations =
    dragonflow = dragonflow.db.neutron.migration:alembic_migrations
networking_sfc.flowclassifier.drivers =
    dragonflow = dragonflow.neutron.services.flowclassifier.driver:DfFlowClassifierDriver
networking_sfc.sfc.drivers =
    dragonflow = dragonflow.neutron.services.sfc.driver:DfSfcDriver
console_scripts =
    df-db = dragonflow.cli.df_db:main
    df-model = dragonflow.cli.df_model:main
    df-local-controller = dragonflow.cmd.eventlet.df_local_controller:main
    df-publisher-service = dragonflow.cmd.eventlet.df_publisher_service:main
    df-l3-agent = dragonflow.cmd.eventlet.df_l3_agent:main
    df-metadata-service = dragonflow.cmd.eventlet.df_metadata_service:main
    df-bgp-service = dragonflow.cmd.eventlet.df_bgp_service:main
    df-skydive-service = dragonflow.cmd.df_skydive_service:service_main
    dragonflow-status = dragonflow.cmd.status:main
    df-rest-service = dragonflow.cmd.eventlet.df_rest_service:main
dragonflow.pubsub_driver =
    zmq_pubsub_driver = dragonflow.db.pubsub_drivers.zmq_pubsub_driver:ZMQPubSubConnect
    zmq_bind_pubsub_driver = dragonflow.db.pubsub_drivers.zmq_pubsub_driver:ZMQPubSubBind
    redis_db_pubsub_driver = dragonflow.db.pubsub_drivers.redis_db_pubsub_driver:RedisPubSub
    etcd_pubsub_driver = dragonflow.db.pubsub_drivers.etcd_pubsub_driver:EtcdPubSub
dragonflow.nb_db_driver =
    etcd_nb_db_driver = dragonflow.db.drivers.etcd_db_driver:EtcdDbDriver
    ramcloud_nb_db_driver = dragonflow.db.drivers.ramcloud_db_driver:RamCloudDbDriver
    zookeeper_nb_db_driver = dragonflow.db.drivers.zookeeper_db_driver:ZookeeperDbDriver
    redis_nb_db_driver = dragonflow.db.drivers.redis_db_driver:RedisDbDriver
    cassandra_nb_db_driver = dragonflow.db.drivers.cassandra_db_driver:CassandraDbDriver
    rethinkdb_nb_db_driver = dragonflow.db.drivers.rethink_db_driver:RethinkDbDriver
    _dummy_nb_db_driver = dragonflow.tests.database._dummy_db_driver:_DummyDbDriver
dragonflow.neutron_notifier_driver =
    nb_api_neutron_notifier_driver = dragonflow.db.pubsub_drivers.nb_api_neutron_notifier:NbApiNeutronNotifier
dragonflow.switch_backend_driver =
    vswitch_backend_driver = dragonflow.switch.drivers.ovs.df_ovs_driver:DfOvsDriver
neutron.service_plugins =
    df-l3-agentless = dragonflow.neutron.services.l3_router_plugin:DFL3AgentlessRouterPlugin
    df-l3 = dragonflow.neutron.services.l3_router_plugin:DFL3RouterPlugin
    df-bgp = dragonflow.neutron.services.bgp.bgp_plugin:DFBgpPlugin
oslo.config.opts =
    dragonflow.conf = dragonflow.conf.opts:list_opts
dragonflow.controller.apps =
    active_port_detection = dragonflow.controller.apps.active_port_detection:ActivePortDetectionApp
    aging = dragonflow.controller.apps.aging:AgingApp
    chassis_snat = dragonflow.controller.apps.chassis_snat:ChassisSNATApp
    classifier = dragonflow.controller.apps.classifier:ClassifierApp
    dhcp = dragonflow.controller.apps.dhcp:DHCPApp
    dnat = dragonflow.controller.apps.dnat:DNATApp
    fc = dragonflow.controller.apps.fc:FcApp
    l2 = dragonflow.controller.apps.l2:L2App
    legacy_snat = dragonflow.controller.apps.legacy_snat:LegacySNatApp
    l3_proactive = dragonflow.controller.apps.l3_proactive:L3ProactiveApp
    l3_reactive = dragonflow.controller.apps.l3_reactive:L3ReactiveApp
    metadata_service = dragonflow.controller.apps.metadata_service:MetadataServiceApp
    migration = dragonflow.controller.apps.migration:MigrationApp
    portbinding = dragonflow.controller.apps.portbinding:PortBindingApp
    portqos = dragonflow.controller.apps.portqos:PortQosApp
    portsec = dragonflow.controller.apps.portsec:PortSecApp
    provider = dragonflow.controller.apps.provider:ProviderApp
    sfc = dragonflow.controller.apps.sfc:SfcApp
    sg = dragonflow.controller.apps.sg:SGApp
    trunk = dragonflow.controller.apps.trunk:TrunkApp
    tunneling = dragonflow.controller.apps.tunneling:TunnelingApp
    log = dragonflow.controller.apps.packet_log:LogPacketApp
dragonflow.db.models =
    active_port = dragonflow.db.models.active_port
    bgp = dragonflow.db.models.bgp
    core = dragonflow.db.models.core
    l2 = dragonflow.db.models.l2
    l3 = dragonflow.db.models.l3
    migration = dragonflow.db.models.migration
    qos = dragonflow.db.models.qos
    secgroups = dragonflow.db.models.secgroups
    service = dragonflow.db.models.service
    sfc = dragonflow.db.models.sfc
    trunk = dragonflow.db.models.trunk
