[tox]
minversion = 1.6
envlist = pep8,py27,py34,py35
skipsdist = True

[testenv]
# Note the hash seed is set to 0 until neutron can be tested with a
# random hash seed successfully.
setenv = VIRTUAL_ENV={envdir}
         PYTHONHASHSEED=0
         PYTHONWARNINGS=default::DeprecationWarning
usedevelop = True
install_command = {toxinidir}/tools/tox_install.sh {env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt} {opts} {packages}
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
whitelist_externals = sh
commands =
  sh tools/pretty_tox.sh '{posargs}'

[testenv:fullstack]
basepython = python2.7
setenv = OS_TEST_PATH=./dragonflow/tests/fullstack
commands =
  sh tools/pretty_tox_no_concurrency.sh '{posargs}'

[testenv:pep8]
commands =
  flake8
  neutron-db-manage --subproject dragonflow check_migration
  {[testenv:genconfig]commands}

[testenv:genconfig]
commands = {toxinidir}/tools/generate_config_file_samples.sh

[testenv:venv]
commands = {posargs}

[testenv:cover]
commands =
  python setup.py testr --coverage --testr-args='{posargs}'
  coverage report

[testenv:docs]
deps =
    sphinx
    oslosphinx
    reno
commands = python setup.py build_sphinx

[flake8]
# E126 continuation line over-indented for hanging indent
# E128 continuation line under-indented for visual indent
# E129 visually indented line with same indent as next logical line
# E265 block comment should start with ‘# ‘
# H404 multi line docstring should start with a summary
# H405 multi line docstring summary not separated with an empty line
# H904 Wrap long lines in parentheses instead of a backslash
# N530 Direct neutron imports not allowed
ignore = E126,E128,E129,E265,H404,H405,H904,N530
show-source = true
# TODO(dougw) neutron/tests/unit/vmware exclusion is a temporary services split hack
exclude = .venv,.git,.tox,dist,doc,*lib/python*,*egg,build,tools,.ropeproject,rally-scenarios,neutron/tests/unit/vmware*

[testenv:pylint]
deps =
  {[testenv]deps}
  pylint
commands =
  pylint --rcfile=.pylintrc --output-format=colorized {posargs:neutron}

[hacking]
import_exceptions = dragonflow._i18n
local-check-factory = neutron_lib.hacking.checks.factory
