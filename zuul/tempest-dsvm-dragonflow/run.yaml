- hosts: all
  name: Autoconverted job legacy-tempest-dsvm-dragonflow from old job gate-tempest-dsvm-dragonflow-ubuntu-xenial-nv
  tasks:

    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - shell:
        cmd: |
          set -e
          set -x
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack-infra/devstack-gate
              dest: devstack-gate
          EOF
          /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              git://git.openstack.org \
              openstack-infra/devstack-gate
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          cat << 'EOF' >>"/tmp/dg-local.conf"
          [[local|localrc]]
          enable_plugin dragonflow git://git.openstack.org/openstack/dragonflow
          Q_ENABLE_DRAGONFLOW_LOCAL_CONTROLLER=True
          # Add bgp project to tempest gate job.
          enable_plugin neutron-dynamic-routing git://git.openstack.org/openstack/neutron-dynamic-routing
          DR_MODE=df-bgp
          # Add networking-sfc
          enable_plugin networking-sfc git://git.openstack.org/openstack/networking-sfc

          EOF
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_TEMPEST=1
          export BRANCH_OVERRIDE=default
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi
          # Because we are testing a non standard project, add
          # our project repository. This makes zuul do the right
          # reference magic for testing changes.
          export PROJECTS="openstack/dragonflow $PROJECTS"
          export PROJECTS="openstack/neutron-dynamic-routing $PROJECTS"
          export PROJECTS="openstack/networking-sfc $PROJECTS"

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          export DEVSTACK_GATE_SETTINGS=/opt/stack/new/dragonflow/devstack/devstackgaterc-redis-tempest

          function gate_hook {
              bash -xe $BASE/new/dragonflow/dragonflow/tests/contrib/gate_hook.sh tempest
          }
          export -f gate_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
